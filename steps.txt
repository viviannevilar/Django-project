
started from hayley's template at github

got to shecodes folder, and used


$ git clone https://github.com/viviannevilar/Django-project.git

$ cd Django-project

$ virtualenv venv

$ ls

$ . venv/bin/activate

# or
$ . venv/bin/activate.fish




$ pip3 install -r requirements.txt


#if you need to upgrade some packages, use the following
$ pip install -U -r requirements.txt

#I used the above when I added some pylint stuff to my
#requirements.txt file. I had the venv activated!
#see the requirements.txt in Django-tutorial for pylint stuff
#https://stackoverflow.com/questions/115977/using-pylint-with-django







# navigate to project level
$ cd she_codes_news 

$ python3 manage.py makemigrations

$ python3 manage.py migrate

$ python3 manage.py runserver

in VSCode

open settings.py file and add this to installed apps
'news.apps.NewsConfig'

migrate now because we told the project about the news app

$ python3 manage.py makemigrations

$ python3 manage.py migrate

#vscode, in she_codes_news/urls.py add this to urlpatterns

    path('news/', include('news.urls')),

#and add the import

from django.urls import path, include

#kill the server again and use

$ python3 manage.py loaddata news

#this loads the data from a json file into the database

$ python3 manage.py runserver

# in vscode go to news/fixtures/news.json

#vscode she_codes_news settings.py, find TEMPLATES, this is what we changed


'DIRS': [(os.path.join(BASE_DIR, 'templates')),],

#and to the end of the file
STATICFILES_DIRS (
    os.path.join(BASE_DIR, 'static')
)


superuser viviannevilar testing321


# if you change the json file, then you need to makemigrations,
  migrate, then loaddata dataname




#add new app

python3 manage.py startapp users


AUTH_USER_MODEL = 'users.CustomUser'

#need to change stuff in admin.py, also models.py



#to save the data from the database into a json file, so you can
delete the database
python3 manage.py dumdata news > news.json

#remove database
rm db.sqlite3

python3 manage.py migrate

python3 manage.py createsuperuser


# In the shell, this works


################################################################
Two ways to have the detail view.
################################################################

##############################
1. If you want it to have the defaul id in the url name, like

http://localhost:8000/users/profile/2/

Then in the template calling this, you need to have something like:

<a href="{% url 'users:profile' story.author.pk %}">{{ story.author }}</a>

Then in urls.py

path('profile/<int:pk>/', UserView.as_view(), name='profile'),

views.py

class UserView(generic.DetailView):
    model = CustomUser
    template_name = 'users/profile.html'
    context_object_name = 'user'

##############################
2. To have the username in the url name, like

http://localhost:8000/users/profile/newuser/

Then in the template calling you need

<a href="{% url 'users:profile' story.author.username %}">{{ story.author }}</a>

and in urls.py

path('profile/<str:slug>/', UserView.as_view(), name='profile'),   

and in views.py

class UserView(generic.DetailView):
    model = CustomUser
    template_name = 'users/profile.html'
    context_object_name = 'user'

    def get_slug_field(self):
        return 'username'



################################################################
Link to take to stories by the author, or to take to profile
################################################################

The context name for this template is "story" (this is a detailview of a story)

##############################
1. To take to the stories by author:

<a href="{% url 'news:userstories' story.author.username %}">{{ story.author }}</a>

##############################
2. To take to the author's profile

<a href="{% url 'users:profile' story.author.username %}">{{ story.author }}</a>  

















